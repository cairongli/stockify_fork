name: "Terraform Infrastructure"

on:
  push:
    branches: [main]
    paths:
      - "terraform/**"
  pull_request:
    branches: [main]
    paths:
      - "terraform/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    env:
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        env:
          TF_VAR_supabase_url: ${{ secrets.SUPABASE_URL }}
          TF_VAR_supabase_anon_key: ${{ secrets.SUPABASE_ANON_KEY }}
          TF_VAR_vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          TF_VAR_vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          TF_VAR_vercel_token: ${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true

      - name: Update PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_supabase_url: ${{ secrets.SUPABASE_URL }}
          TF_VAR_supabase_anon_key: ${{ secrets.SUPABASE_ANON_KEY }}
          TF_VAR_vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          TF_VAR_vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          TF_VAR_vercel_token: ${{ secrets.VERCEL_TOKEN }}
